# Generated by Django 2.2.1 on 2019-09-18 10:33

from django.db import migrations, models
import django.db.models.deletion
import erp_core.fileshandler.filemixin


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CasualDailyRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('work_type', models.CharField(choices=[('T', 'Trenching'), ('B', 'Backfilling'), ('TB', 'Trenching & Backfiling'), ('CI', 'Cable Installation'), ('TBI', 'Trenching & Backfiling &Cable Installation'), ('O', 'Others')], max_length=2)),
                ('others', models.CharField(blank=True, help_text='If work type is others specify the kind of work here', max_length=250, null=True)),
                ('casuals_list_file', models.FileField(upload_to='files/ftts/Casuals/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='DailyCivilWorkProduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('trenched_distance', models.FloatField(blank=True, null=True)),
                ('backfilled_distance', models.FloatField(blank=True, null=True)),
                ('duct_installed_length', models.FloatField(blank=True, null=True)),
                ('cable_installed_length', models.FloatField(blank=True, null=True)),
                ('pole_installed', models.IntegerField(blank=True, null=True)),
                ('manhole_installed', models.IntegerField(blank=True, null=True)),
                ('site_dailyproduction_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DailyManHoleInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('FTTSProjects', 'files/Casuals/manhole/'))),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('distance_manhole', models.FloatField(blank=True, null=True)),
                ('manhole_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailySiteCableInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('FTTSProjects', 'files/Casuals/cable/'))),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('distance_cable', models.FloatField(blank=True, null=True)),
                ('cable_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailySiteDuctInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('FTTSProjects', 'files/Casuals/duct/'))),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('distance_duct', models.FloatField(blank=True, null=True)),
                ('site_duct_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailySiteInterception',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('FTTSProjects', 'files/Casuals/interception/'))),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('distance_interception', models.FloatField(blank=True, null=True)),
                ('interception_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailySiteTerminalInHse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('FTTSProjects', 'files/Casuals/terminalinhse/'))),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('terminal_odf_no', models.IntegerField(default=0)),
                ('terminal_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailySiteTrenching',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('FTTSProjects', 'files/Casuals/trenching/'))),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('distance_trenched', models.FloatField(blank=True, null=True)),
                ('site_trenching_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FiberBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('beneficiary_name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=350, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('unit', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_approved', models.BooleanField(blank=True, default=False, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsAccessApprovalCivil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('access_approval', models.FileField(upload_to='files/CivilWorksTeam/accessapproval/%Y/%m/%d/')),
                ('access_approval_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsAccessApprovalInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('access_approval', models.FileField(upload_to='files/InstallationTeamFtts/accessapproval/%Y/%m/%d/')),
                ('access_approval_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FTTSCasualDailyRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FttsCertificates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ftts_snag_document', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/SafaricomTeamftts/snag/'))),
                ('ftts_snag_document_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_crq_ticketno', models.IntegerField(blank=True, null=True)),
                ('ftts_crq_document', models.FileField(blank=True, null=True, upload_to='files/SafaricomTeamftth/crq/%Y/%m/%d/')),
                ('ftts_crq_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_final_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/SafaricomTeamftts/finalcert/'))),
                ('ftts_final_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_operational_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/SafaricomTeamftts/opsacceptance/'))),
                ('ftts_operational_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_conditional_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/SafaricomTeamftts/conditionalcert/'))),
                ('ftts_conditional_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsCivilTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ftts_civil_team_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsCommercialTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ftts_quote', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/CommercialTeam/quote/'))),
                ('ftts_wayleave_application', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/wayleaveapplication/'))),
                ('ftts_project_plan', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/projectplan/'))),
                ('ftts_initial_invoice', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/initialinvoice/'))),
                ('ftts_accumulated_BOM_survey', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'FTTS/files/accumulatedBOM/'))),
                ('ftts_accumulated_BOM_survey_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsHealthDocsInstallationTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project_safety_comm_plan', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/InstallationTeamFtts/projectsafety/'))),
                ('project_safety_comm_plan_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('hazard_analysis_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/InstallationTeamFtts/hazardanalysis/'))),
                ('hazard_analysis_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('attendance_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/InstallationTeamFtts/attendanceform/'))),
                ('attendance_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('health_documents_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsHealthDocumentsCivilTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project_safety_comm_plan', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CivilWorksTeam/projectsafety/'))),
                ('project_safety_comm_plan_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('hazard_analysis_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CivilWorksTeam/hazardanalysis/'))),
                ('hazard_analysis_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('attendance_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CivilWorksTeam/attendanceform/'))),
                ('attendance_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('health_documents_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsInstallationTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/Casuals/installationteam/'))),
                ('ftts_integration', models.BooleanField(default=False)),
                ('ftts_integration_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_installation_team_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_asbuit_received', models.BooleanField(default=True)),
                ('ftts_asbuilt_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsIssues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ftts_issue', models.CharField(max_length=100)),
                ('ftts_issue_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeamFtts/issues/'))),
                ('ftts_issue_sorted_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeamFtts/issues/'))),
                ('closed', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsKpi',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('kpi', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsProcurementTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ftts_material_requisition', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/CommercialTeam/materialrequisition/'))),
                ('ftts_po_quote_serviceno', models.IntegerField(blank=True, null=True)),
                ('ftts_po_quote_serviceamount', models.IntegerField(blank=True, null=True)),
                ('ftts_po_subcontractors', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/CommercialTeam/posubcontractors/'))),
                ('ftts_po_quote_subconamount', models.IntegerField(blank=True, null=True)),
                ('ftts_po_quote_subconno', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FTTSProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('project_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('ftts_activation', models.BooleanField(default=False)),
                ('ftts_activation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='FttsProjectPurchaseOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('ftts_po_requisition', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/requisition/'))),
                ('ftts_po_requisition_no', models.IntegerField(blank=True, null=True)),
                ('ftts_po_requisition_amount', models.IntegerField(blank=True, null=True)),
                ('ftts_po_client', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/poclient/'))),
                ('ftts_po_client_no', models.IntegerField(blank=True, null=True)),
                ('ftts_po_client_amount', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('site_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FttsSubTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('subtask_name', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('kpi', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='fttsSurvey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_latitude', models.FloatField(blank=True, null=True)),
                ('site_longitude', models.FloatField(blank=True, null=True)),
                ('distance_from_ip', models.FloatField(blank=True, null=True)),
                ('high_level_design', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/survey/highleveldesigns/'))),
                ('survey_comment', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='fttsSurveyPhotos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('survey_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/survey/'))),
                ('survey_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/survey/'))),
                ('survey_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/survey/'))),
                ('survey_images_comment', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('task_name', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('kpi', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InterceptionPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('interception_point_name', models.CharField(max_length=50)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManHole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('manhole_no', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManHoleInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_manhole_distance', models.FloatField(default=0)),
                ('manhole_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/manhole/'))),
                ('manhole_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/manhole/'))),
                ('manhole_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/manhole/'))),
                ('manhole_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManHoleInstallationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('manhole_image_1', models.ImageField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/CivilWorksTeam/manhole/'))),
                ('manhole_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('pole_no', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteTrenchingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('site_trenching_image_1', models.ImageField(max_length=250, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/CivilWorksTeam/trenching/'))),
                ('site_trenching_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sitetrenchingimages', to='erp_ftts.DailySiteTrenching')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteTrenching',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_trenched_distance', models.FloatField(default=0)),
                ('site_trenching_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/trenching/'))),
                ('site_trenching_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/trenching/'))),
                ('site_trenching_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/trenching/'))),
                ('site_trenching_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sitetrenching', to='erp_ftts.FttsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteTerminalInHseImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('terminal_image_1', models.ImageField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/InstallationTeam/terminalinhse/'))),
                ('terminal_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terminalinhseimage', to='erp_ftts.DailySiteTerminalInHse')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteTerminalInHse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_terminal_in_hse_distance', models.FloatField(default=0)),
                ('site_terminal_in_hse_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/terminalinhse/'))),
                ('site_terminal_in_hse_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/terminalinhse/'))),
                ('site_terminal_in_hse_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/terminalinhse/'))),
                ('site_terminal_in_hse_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='siteterminalinhse', to='erp_ftts.FttsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInterceptionImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('interception_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/InstallationTeam/interception/'))),
                ('interception_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interceptionimages', to='erp_ftts.DailySiteInterception')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteInterception',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_interception_distance', models.FloatField(default=0)),
                ('site_interception_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/interception/'))),
                ('site_interception_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/interception/'))),
                ('site_interception_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/interception/'))),
                ('site_interception_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('manhole', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.ManHole')),
                ('site_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='siteinterception', to='erp_ftts.FttsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteDuctInstallationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('site_duct_image_1', models.ImageField(max_length=250, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/CivilWorksTeam/duct/'))),
                ('site_duct_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ductimages', to='erp_ftts.DailySiteDuctInstallation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteDuctInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_duct_distance', models.FloatField(default=0)),
                ('site_duct_installation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/duct/'))),
                ('site_duct_installation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/duct/'))),
                ('site_duct_installation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/duct/'))),
                ('site_duct_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='siteductinstallation', to='erp_ftts.FttsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteCableInstallationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('cable_image_1', models.ImageField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/CivilWorksTeam/cable/'))),
                ('cable_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cableimages', to='erp_ftts.DailySiteCableInstallation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteCableInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_cable_distance', models.FloatField(default=0)),
                ('site_cable_installation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/cableinstallation/'))),
                ('site_cable_installation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/cableinstallation/'))),
                ('site_cable_installation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/cableinstallation/'))),
                ('site_cable_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sitecableinstallation', to='erp_ftts.FttsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
