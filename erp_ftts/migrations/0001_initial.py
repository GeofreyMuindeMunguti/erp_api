<<<<<<< HEAD
# Generated by Django 2.2.1 on 2019-09-19 13:46
=======
# Generated by Django 2.2.1 on 2019-09-10 07:21
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e

from django.db import migrations, models
import django.db.models.deletion
import erp_core.fileshandler.filemixin


class Migration(migrations.Migration):

    initial = True

    dependencies = [
<<<<<<< HEAD
=======
        ('erp_core', '0001_initial'),
        ('erp_ftth', '0001_initial'),
        ('users', '0001_initial'),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
    ]

    operations = [
        migrations.CreateModel(
<<<<<<< HEAD
            name='CasualDailyRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('work_type', models.CharField(choices=[('T', 'Trenching'), ('B', 'Backfilling'), ('TB', 'Trenching & Backfiling'), ('CI', 'Cable Installation'), ('TBI', 'Trenching & Backfiling &Cable Installation'), ('O', 'Others')], max_length=2)),
                ('others', models.CharField(blank=True, help_text='If work type is others specify the kind of work here', max_length=250, null=True)),
                ('casuals_list_file', models.FileField(upload_to='files/ftts/Casuals/%Y/%m/%d/')),
            ],
        ),
        migrations.CreateModel(
            name='DailyCivilWorkProduction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('trenched_distance', models.FloatField(blank=True, null=True)),
                ('backfilled_distance', models.FloatField(blank=True, null=True)),
                ('duct_installed_length', models.FloatField(blank=True, null=True)),
                ('cable_installed_length', models.FloatField(blank=True, null=True)),
                ('pole_installed', models.IntegerField(blank=True, null=True)),
                ('manhole_installed', models.IntegerField(blank=True, null=True)),
                ('site_dailyproduction_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
=======
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            name='DailyManHoleInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('FTTSProjects', 'files/Casuals/manhole/'))),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('distance_manhole', models.FloatField(blank=True, null=True)),
                ('manhole_comment', models.CharField(blank=True, max_length=100, null=True)),
<<<<<<< HEAD
=======
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailySiteCableInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('FTTSProjects', 'files/Casuals/cable/'))),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('distance_cable', models.FloatField(blank=True, null=True)),
                ('cable_comment', models.CharField(blank=True, max_length=100, null=True)),
<<<<<<< HEAD
=======
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailySiteDuctInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('FTTSProjects', 'files/Casuals/duct/'))),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('distance_duct', models.FloatField(blank=True, null=True)),
                ('site_duct_comment', models.CharField(blank=True, max_length=100, null=True)),
<<<<<<< HEAD
=======
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailySiteInterception',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('FTTSProjects', 'files/Casuals/interception/'))),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('distance_interception', models.FloatField(blank=True, null=True)),
                ('interception_comment', models.CharField(blank=True, max_length=100, null=True)),
<<<<<<< HEAD
=======
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailySiteTerminalInHse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('FTTSProjects', 'files/Casuals/terminalinhse/'))),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('terminal_odf_no', models.IntegerField(default=0)),
                ('terminal_comment', models.CharField(blank=True, max_length=100, null=True)),
<<<<<<< HEAD
=======
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DailySiteTrenching',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('FTTSProjects', 'files/Casuals/trenching/'))),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('distance_trenched', models.FloatField(blank=True, null=True)),
                ('site_trenching_comment', models.CharField(blank=True, max_length=100, null=True)),
<<<<<<< HEAD
=======
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FiberBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('beneficiary_name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=350, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('unit', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_approved', models.BooleanField(blank=True, default=False, null=True)),
=======
            name='FttsAccessApprovalCivil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('access_approval', models.FileField(upload_to='files/CivilWorksTeam/accessapproval/%Y/%m/%d/')),
                ('access_approval_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FttsAccessApprovalCivil',
=======
            name='FttsCivilTeam',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('access_approval', models.FileField(upload_to='files/CivilWorksTeam/accessapproval/%Y/%m/%d/')),
                ('access_approval_comment', models.CharField(blank=True, max_length=100, null=True)),
=======
                ('ftts_civil_team_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FttsAccessApprovalInstallation',
=======
            name='FttsHealthDocsInstallationTeam',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('access_approval', models.FileField(upload_to='files/InstallationTeamFtts/accessapproval/%Y/%m/%d/')),
                ('access_approval_comment', models.CharField(blank=True, max_length=100, null=True)),
=======
                ('project_safety_comm_plan', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/InstallationTeamFtts/projectsafety/'))),
                ('project_safety_comm_plan_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('hazard_analysis_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/InstallationTeamFtts/hazardanalysis/'))),
                ('hazard_analysis_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('attendance_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/InstallationTeamFtts/attendanceform/'))),
                ('attendance_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('health_documents_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('access_approval', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsAccessApprovalCivil')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FTTSCasualDailyRegister',
=======
            name='FttsInstallationTeam',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('work_day', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='FttsCertificates',
=======
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/Casuals/installationteam/'))),
                ('ftts_integration', models.BooleanField(default=False)),
                ('ftts_integration_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_installation_team_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_asbuit_received', models.BooleanField(default=True)),
                ('ftts_asbuilt_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FTTSProject',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('ftts_snag_document', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/SafaricomTeamftts/snag/'))),
                ('ftts_snag_document_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_crq_ticketno', models.IntegerField(blank=True, null=True)),
                ('ftts_crq_document', models.FileField(blank=True, null=True, upload_to='files/SafaricomTeamftth/crq/%Y/%m/%d/')),
                ('ftts_crq_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_final_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/SafaricomTeamftts/finalcert/'))),
                ('ftts_final_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_operational_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/SafaricomTeamftts/opsacceptance/'))),
                ('ftts_operational_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_conditional_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/SafaricomTeamftts/conditionalcert/'))),
                ('ftts_conditional_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsCivilTeam',
=======
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('project_name', models.CharField(max_length=100, unique=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_activation', models.BooleanField(default=False)),
                ('ftts_activation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='FttsSite',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('ftts_civil_team_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FttsCommercialTeam',
=======
                ('site_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('ftts_project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FTTSProject')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Location')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
            ],
            options={
                'unique_together': {('site_name', 'ftts_project')},
            },
        ),
        migrations.CreateModel(
            name='fttsSurvey',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('ftts_quote', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/CommercialTeam/quote/'))),
                ('ftts_wayleave_application', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/wayleaveapplication/'))),
                ('ftts_project_plan', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/projectplan/'))),
                ('ftts_initial_invoice', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/initialinvoice/'))),
                ('ftts_accumulated_BOM_survey', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'FTTS/files/accumulatedBOM/'))),
                ('ftts_accumulated_BOM_survey_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
=======
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_latitude', models.FloatField(blank=True, null=True)),
                ('site_longitude', models.FloatField(blank=True, null=True)),
                ('distance_from_ip', models.FloatField(blank=True, null=True)),
                ('high_level_design', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/survey/highleveldesigns/'))),
                ('survey_comment', models.CharField(blank=True, max_length=200, null=True)),
                ('county', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Location')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FttsHealthDocsInstallationTeam',
=======
            name='ManHole',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('project_safety_comm_plan', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/InstallationTeamFtts/projectsafety/'))),
                ('project_safety_comm_plan_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('hazard_analysis_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/InstallationTeamFtts/hazardanalysis/'))),
                ('hazard_analysis_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('attendance_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/InstallationTeamFtts/attendanceform/'))),
                ('attendance_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('health_documents_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
=======
                ('manhole_no', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Location')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FttsHealthDocumentsCivilTeam',
=======
            name='SiteTrenchingImage',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('project_safety_comm_plan', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CivilWorksTeam/projectsafety/'))),
                ('project_safety_comm_plan_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('hazard_analysis_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CivilWorksTeam/hazardanalysis/'))),
                ('hazard_analysis_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('attendance_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CivilWorksTeam/attendanceform/'))),
                ('attendance_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('health_documents_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
=======
                ('site_trenching_image_1', models.ImageField(max_length=250, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/CivilWorksTeam/trenching/'))),
                ('site_trenching_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sitetrenchingimages', to='erp_ftts.DailySiteTrenching')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FttsInstallationTeam',
=======
            name='SiteTrenching',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
<<<<<<< HEAD
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/Casuals/installationteam/'))),
                ('ftts_integration', models.BooleanField(default=False)),
                ('ftts_integration_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_installation_team_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_asbuit_received', models.BooleanField(default=True)),
                ('ftts_asbuilt_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
=======
                ('site_trenched_distance', models.FloatField(default=0)),
                ('site_trenching_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/trenching/'))),
                ('site_trenching_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/trenching/'))),
                ('site_trenching_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/trenching/'))),
                ('site_trenching_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sitetrenching', to='erp_ftts.FttsSite')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FttsIssues',
=======
            name='SiteTerminalInHseImage',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('ftts_issue', models.CharField(max_length=100)),
                ('ftts_issue_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeamFtts/issues/'))),
                ('ftts_issue_sorted_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeamFtts/issues/'))),
                ('closed', models.BooleanField(default=False)),
=======
                ('terminal_image_1', models.ImageField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/InstallationTeam/terminalinhse/'))),
                ('terminal_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terminalinhseimage', to='erp_ftts.DailySiteTerminalInHse')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FttsKpi',
=======
            name='SiteTerminalInHse',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('kpi', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
=======
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_terminal_in_hse_distance', models.FloatField(default=0)),
                ('site_terminal_in_hse_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/terminalinhse/'))),
                ('site_terminal_in_hse_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/terminalinhse/'))),
                ('site_terminal_in_hse_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/terminalinhse/'))),
                ('site_terminal_in_hse_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='siteterminalinhse', to='erp_ftts.FttsSite')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FttsProcurementTeam',
=======
            name='SiteInterceptionImage',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('ftts_material_requisition', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/CommercialTeam/materialrequisition/'))),
                ('ftts_po_quote_serviceno', models.IntegerField(blank=True, null=True)),
                ('ftts_po_quote_serviceamount', models.IntegerField(blank=True, null=True)),
                ('ftts_po_subcontractors', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/CommercialTeam/posubcontractors/'))),
                ('ftts_po_quote_subconamount', models.IntegerField(blank=True, null=True)),
                ('ftts_po_quote_subconno', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
=======
                ('interception_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/InstallationTeam/interception/'))),
                ('interception_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interceptionimages', to='erp_ftts.DailySiteInterception')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FTTSProject',
=======
            name='SiteInterception',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
<<<<<<< HEAD
                ('project_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('ftts_activation', models.BooleanField(default=False)),
                ('ftts_activation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='FttsProjectPurchaseOrder',
=======
                ('site_interception_distance', models.FloatField(default=0)),
                ('site_interception_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/interception/'))),
                ('site_interception_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/interception/'))),
                ('site_interception_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/interception/'))),
                ('site_interception_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('manhole', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.ManHole')),
                ('site_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='siteinterception', to='erp_ftts.FttsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteDuctInstallationImage',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('ftts_po_requisition', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/requisition/'))),
                ('ftts_po_requisition_no', models.IntegerField(blank=True, null=True)),
                ('ftts_po_requisition_amount', models.IntegerField(blank=True, null=True)),
                ('ftts_po_client', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/poclient/'))),
                ('ftts_po_client_no', models.IntegerField(blank=True, null=True)),
                ('ftts_po_client_amount', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
=======
                ('site_duct_image_1', models.ImageField(max_length=250, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/CivilWorksTeam/duct/'))),
                ('site_duct_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ductimages', to='erp_ftts.DailySiteDuctInstallation')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FttsSite',
=======
            name='SiteDuctInstallation',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('site_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FttsSubTask',
=======
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_duct_distance', models.FloatField(default=0)),
                ('site_duct_installation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/duct/'))),
                ('site_duct_installation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/duct/'))),
                ('site_duct_installation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/duct/'))),
                ('site_duct_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='siteductinstallation', to='erp_ftts.FttsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteCableInstallationImage',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('subtask_name', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('kpi', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
=======
                ('cable_image_1', models.ImageField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/CivilWorksTeam/cable/'))),
                ('cable_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cableimages', to='erp_ftts.DailySiteCableInstallation')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='fttsSurvey',
=======
            name='SiteCableInstallation',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
<<<<<<< HEAD
                ('site_latitude', models.FloatField(blank=True, null=True)),
                ('site_longitude', models.FloatField(blank=True, null=True)),
                ('distance_from_ip', models.FloatField(blank=True, null=True)),
                ('high_level_design', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/survey/highleveldesigns/'))),
                ('survey_comment', models.CharField(blank=True, max_length=200, null=True)),
=======
                ('site_cable_distance', models.FloatField(default=0)),
                ('site_cable_installation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/cableinstallation/'))),
                ('site_cable_installation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/cableinstallation/'))),
                ('site_cable_installation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/cableinstallation/'))),
                ('site_cable_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sitecableinstallation', to='erp_ftts.FttsSite')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='fttsSurveyPhotos',
=======
            name='Pole',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('survey_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/survey/'))),
                ('survey_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/survey/'))),
                ('survey_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/survey/'))),
                ('survey_images_comment', models.CharField(blank=True, max_length=200, null=True)),
=======
                ('pole_no', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Location')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FttsTask',
=======
            name='ManHoleInstallationImage',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('task_name', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('kpi', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
=======
                ('manhole_image_1', models.ImageField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/CivilWorksTeam/manhole/'))),
                ('manhole_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manholeimages', to='erp_ftts.DailyManHoleInstallation')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='FttsTeam',
=======
            name='ManHoleInstallation',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
=======
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_manhole_distance', models.FloatField(default=0)),
                ('manhole_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/manhole/'))),
                ('manhole_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/manhole/'))),
                ('manhole_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/manhole/'))),
                ('manhole_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='manholeinstallations', to='erp_ftts.FttsSite')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InterceptionPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('interception_point_name', models.CharField(max_length=50)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
<<<<<<< HEAD
=======
                ('county', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interceptionpointftts', to='users.Location')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='ManHole',
=======
            name='FttsTeam',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('manhole_no', models.CharField(blank=True, max_length=100, null=True)),
=======
                ('ftts_civil_team', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsCivilTeam')),
                ('ftts_installation_team', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsInstallationTeam')),
                ('ftts_survey', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.fttsSurvey')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsSite')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='ManHoleInstallation',
=======
            name='FttsTask',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_manhole_distance', models.FloatField(default=0)),
                ('manhole_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/manhole/'))),
                ('manhole_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/manhole/'))),
                ('manhole_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/manhole/'))),
                ('manhole_comment', models.CharField(blank=True, max_length=100, null=True)),
=======
                ('task_name', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('kpi', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('category_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_core.Category')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='ManHoleInstallationImage',
=======
            name='fttsSurveyPhotos',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('manhole_image_1', models.ImageField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/CivilWorksTeam/manhole/'))),
                ('manhole_comment', models.CharField(blank=True, max_length=100, null=True)),
=======
                ('survey_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/survey/'))),
                ('survey_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/survey/'))),
                ('survey_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/survey/'))),
                ('survey_images_comment', models.CharField(blank=True, max_length=200, null=True)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='fttssurveyphotos', to='erp_ftts.FttsSite')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
<<<<<<< HEAD
        migrations.CreateModel(
            name='Pole',
=======
        migrations.AddField(
            model_name='fttssurvey',
            name='ftts_interception_point',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.InterceptionPoint'),
        ),
        migrations.AddField(
            model_name='fttssurvey',
            name='posted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser'),
        ),
        migrations.AddField(
            model_name='fttssurvey',
            name='site_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsSite'),
        ),
        migrations.AddField(
            model_name='fttssurvey',
            name='survey_photos',
            field=models.ManyToManyField(to='erp_ftts.fttsSurveyPhotos'),
        ),
        migrations.CreateModel(
            name='FttsSubTask',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('pole_no', models.CharField(blank=True, max_length=100, null=True)),
=======
                ('subtask_name', models.CharField(blank=True, max_length=150, null=True, unique=True)),
                ('kpi', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
                ('task_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_ftts.FttsTask')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='SiteTrenchingImage',
=======
            name='FttsProjectPurchaseOrder',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('site_trenching_image_1', models.ImageField(max_length=250, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/CivilWorksTeam/trenching/'))),
                ('site_trenching_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sitetrenchingimages', to='erp_ftts.DailySiteTrenching')),
=======
                ('ftts_po_requisition', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/requisition/'))),
                ('ftts_po_requisition_no', models.IntegerField(blank=True, null=True)),
                ('ftts_po_requisition_amount', models.IntegerField(blank=True, null=True)),
                ('ftts_po_client', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/poclient/'))),
                ('ftts_po_client_no', models.IntegerField(blank=True, null=True)),
                ('ftts_po_client_amount', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='projectpurchaseorders', to='erp_ftts.FTTSProject')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='SiteTrenching',
=======
            name='FttsProcurementTeam',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_trenched_distance', models.FloatField(default=0)),
                ('site_trenching_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/trenching/'))),
                ('site_trenching_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/trenching/'))),
                ('site_trenching_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/trenching/'))),
                ('site_trenching_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sitetrenching', to='erp_ftts.FttsSite')),
=======
                ('ftts_material_requisition', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/CommercialTeam/materialrequisition/'))),
                ('ftts_po_quote_serviceno', models.IntegerField(blank=True, null=True)),
                ('ftts_po_quote_serviceamount', models.IntegerField(blank=True, null=True)),
                ('ftts_po_subcontractors', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/CommercialTeam/posubcontractors/'))),
                ('ftts_po_quote_subconamount', models.IntegerField(blank=True, null=True)),
                ('ftts_po_quote_subconno', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FTTSProject')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='SiteTerminalInHseImage',
=======
            name='FttsKpi',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('terminal_image_1', models.ImageField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/InstallationTeam/terminalinhse/'))),
                ('terminal_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terminalinhseimage', to='erp_ftts.DailySiteTerminalInHse')),
=======
                ('kpi', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='SiteTerminalInHse',
=======
            name='FttsIssues',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_terminal_in_hse_distance', models.FloatField(default=0)),
                ('site_terminal_in_hse_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/terminalinhse/'))),
                ('site_terminal_in_hse_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/terminalinhse/'))),
                ('site_terminal_in_hse_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/terminalinhse/'))),
                ('site_terminal_in_hse_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='siteterminalinhse', to='erp_ftts.FttsSite')),
=======
                ('ftts_issue', models.CharField(max_length=100)),
                ('ftts_issue_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeamFtts/issues/'))),
                ('ftts_issue_sorted_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeamFtts/issues/'))),
                ('closed', models.BooleanField(default=False)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
                ('site_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsSite')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
<<<<<<< HEAD
        migrations.CreateModel(
            name='SiteInterceptionImage',
=======
        migrations.AddField(
            model_name='fttsinstallationteam',
            name='ftts_interception',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.SiteInterception'),
        ),
        migrations.AddField(
            model_name='fttsinstallationteam',
            name='ftts_issues',
            field=models.ManyToManyField(blank=True, to='erp_ftts.FttsIssues'),
        ),
        migrations.AddField(
            model_name='fttsinstallationteam',
            name='ftts_terminal_in_hse',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.SiteTerminalInHse'),
        ),
        migrations.AddField(
            model_name='fttsinstallationteam',
            name='health_documents',
            field=models.ManyToManyField(blank=True, to='erp_ftts.FttsHealthDocsInstallationTeam'),
        ),
        migrations.AddField(
            model_name='fttsinstallationteam',
            name='no_of_casuals_atsite',
            field=models.ManyToManyField(blank=True, to='users.Casual'),
        ),
        migrations.AddField(
            model_name='fttsinstallationteam',
            name='posted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser'),
        ),
        migrations.AddField(
            model_name='fttsinstallationteam',
            name='site_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsSite'),
        ),
        migrations.CreateModel(
            name='FttsHealthDocumentsCivilTeam',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('interception_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/InstallationTeam/interception/'))),
                ('interception_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interceptionimages', to='erp_ftts.DailySiteInterception')),
=======
                ('project_safety_comm_plan', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CivilWorksTeam/projectsafety/'))),
                ('project_safety_comm_plan_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('hazard_analysis_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CivilWorksTeam/hazardanalysis/'))),
                ('hazard_analysis_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('attendance_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CivilWorksTeam/attendanceform/'))),
                ('attendance_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('health_documents_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('access_approval', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsAccessApprovalCivil')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='civilhealthdocuments', to='erp_ftts.FttsSite')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
<<<<<<< HEAD
        migrations.CreateModel(
            name='SiteInterception',
=======
        migrations.AddField(
            model_name='fttshealthdocsinstallationteam',
            name='site_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='installationhealthdocuments', to='erp_ftts.FttsSite'),
        ),
        migrations.CreateModel(
            name='FttsCommercialTeam',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_interception_distance', models.FloatField(default=0)),
                ('site_interception_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/interception/'))),
                ('site_interception_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/interception/'))),
                ('site_interception_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/InstallationTeam/interception/'))),
                ('site_interception_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('manhole', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.ManHole')),
                ('site_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='siteinterception', to='erp_ftts.FttsSite')),
=======
                ('ftts_quote', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/CommercialTeam/quote/'))),
                ('ftts_wayleave_application', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/wayleaveapplication/'))),
                ('ftts_project_plan', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/projectplan/'))),
                ('ftts_initial_invoice', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/CommercialTeam/initialinvoice/'))),
                ('ftts_accumulated_BOM_survey', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'FTTS/files/accumulatedBOM/'))),
                ('ftts_accumulated_BOM_survey_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('ftts_po_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsProjectPurchaseOrder')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fttscommercialteams', to='erp_ftts.FTTSProject')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
<<<<<<< HEAD
        migrations.CreateModel(
            name='SiteDuctInstallationImage',
=======
        migrations.AddField(
            model_name='fttscivilteam',
            name='ftts_cable_installation',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.SiteCableInstallation'),
        ),
        migrations.AddField(
            model_name='fttscivilteam',
            name='ftts_duct_installation',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.SiteDuctInstallation'),
        ),
        migrations.AddField(
            model_name='fttscivilteam',
            name='ftts_manhole_installation',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.ManHoleInstallation'),
        ),
        migrations.AddField(
            model_name='fttscivilteam',
            name='ftts_trenching',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.SiteTrenching'),
        ),
        migrations.AddField(
            model_name='fttscivilteam',
            name='health_documents',
            field=models.ManyToManyField(blank=True, to='erp_ftts.FttsHealthDocumentsCivilTeam'),
        ),
        migrations.AddField(
            model_name='fttscivilteam',
            name='posted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser'),
        ),
        migrations.AddField(
            model_name='fttscivilteam',
            name='site_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsSite'),
        ),
        migrations.CreateModel(
            name='FttsCertificates',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('site_duct_image_1', models.ImageField(max_length=250, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/CivilWorksTeam/duct/'))),
                ('site_duct_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ductimages', to='erp_ftts.DailySiteDuctInstallation')),
=======
                ('ftts_snag_document', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/SafaricomTeamftts/snag/'))),
                ('ftts_snag_document_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_crq_ticketno', models.IntegerField(blank=True, null=True)),
                ('ftts_crq_document', models.FileField(blank=True, null=True, upload_to='files/SafaricomTeamftth/crq/%Y/%m/%d/')),
                ('ftts_crq_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_final_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/SafaricomTeamftts/finalcert/'))),
                ('ftts_final_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_operational_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('FTTSProjects', 'files/SafaricomTeamftts/opsacceptance/'))),
                ('ftts_operational_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('ftts_conditional_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'files/SafaricomTeamftts/conditionalcert/'))),
                ('ftts_conditional_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FTTSProject')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
<<<<<<< HEAD
            name='SiteDuctInstallation',
=======
            name='FttsAccessApprovalInstallation',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_duct_distance', models.FloatField(default=0)),
                ('site_duct_installation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/duct/'))),
                ('site_duct_installation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/duct/'))),
                ('site_duct_installation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/duct/'))),
                ('site_duct_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='siteductinstallation', to='erp_ftts.FttsSite')),
=======
                ('access_approval', models.FileField(upload_to='files/InstallationTeamFtts/accessapproval/%Y/%m/%d/')),
                ('access_approval_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='accessapprovalcivil', to='erp_ftts.FttsSite')),
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            ],
            options={
                'abstract': False,
            },
        ),
<<<<<<< HEAD
        migrations.CreateModel(
            name='SiteCableInstallationImage',
=======
        migrations.AddField(
            model_name='fttsaccessapprovalcivil',
            name='site_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='civilaccessapproval', to='erp_ftts.FttsSite'),
        ),
        migrations.CreateModel(
            name='FiberBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('beneficiary_name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=350, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('unit', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_approved', models.BooleanField(blank=True, default=False, null=True)),
                ('project_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_ftth.FTTHProject')),
                ('site_name', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_ftts.FttsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='dailysitetrenching',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dailysitetrenchings', to='erp_ftts.SiteTrenching'),
        ),
        migrations.AddField(
            model_name='dailysiteterminalinhse',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='terminalinhsedays', to='erp_ftts.SiteTerminalInHse'),
        ),
        migrations.AddField(
            model_name='dailysiteinterception',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interceptiondays', to='erp_ftts.SiteInterception'),
        ),
        migrations.AddField(
            model_name='dailysiteductinstallation',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dailyduct', to='erp_ftts.SiteDuctInstallation'),
        ),
        migrations.AddField(
            model_name='dailysitecableinstallation',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cableinstalldays', to='erp_ftts.SiteCableInstallation'),
        ),
        migrations.AddField(
            model_name='dailymanholeinstallation',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manholeinstalldays', to='erp_ftts.ManHoleInstallation'),
        ),
        migrations.CreateModel(
            name='FTTSCasualDailyRegister',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('cable_image_1', models.ImageField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('FTTSProjects', 'images/CivilWorksTeam/cable/'))),
                ('cable_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cableimages', to='erp_ftts.DailySiteCableInstallation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteCableInstallation',
=======
                ('work_day', models.DateField(blank=True, null=True)),
                ('ftts_casual', models.ManyToManyField(related_name='fttscasualregister', to='users.Casual')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
                ('site_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsSite')),
            ],
            options={
                'unique_together': {('site_name', 'work_day')},
            },
        ),
        migrations.CreateModel(
            name='DailyCivilWorkProduction',
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
<<<<<<< HEAD
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('site_cable_distance', models.FloatField(default=0)),
                ('site_cable_installation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/cableinstallation/'))),
                ('site_cable_installation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/cableinstallation/'))),
                ('site_cable_installation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('FTTSProjects', 'images/CivilWorksTeam/cableinstallation/'))),
                ('site_cable_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='sitecableinstallation', to='erp_ftts.FttsSite')),
            ],
            options={
                'abstract': False,
=======
                ('work_day', models.DateField(blank=True, null=True)),
                ('trenched_distance', models.FloatField(blank=True, null=True)),
                ('backfilled_distance', models.FloatField(blank=True, null=True)),
                ('duct_installed_length', models.FloatField(blank=True, null=True)),
                ('cable_installed_length', models.FloatField(blank=True, null=True)),
                ('pole_installed', models.IntegerField(blank=True, null=True)),
                ('manhole_installed', models.IntegerField(blank=True, null=True)),
                ('site_dailyproduction_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
                ('site_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsSite')),
            ],
            options={
                'unique_together': {('site_name', 'work_day')},
            },
        ),
        migrations.CreateModel(
            name='CasualDailyRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('work_type', models.CharField(choices=[('T', 'Trenching'), ('B', 'Backfilling'), ('TB', 'Trenching & Backfiling'), ('CI', 'Cable Installation'), ('TBI', 'Trenching & Backfiling &Cable Installation'), ('O', 'Others')], max_length=2)),
                ('others', models.CharField(blank=True, help_text='If work type is others specify the kind of work here', max_length=250, null=True)),
                ('casuals_list_file', models.FileField(upload_to='files/ftts/Casuals/%Y/%m/%d/')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.CustomUser')),
                ('site_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erp_ftts.FttsSite')),
            ],
            options={
                'unique_together': {('site_name', 'work_day')},
>>>>>>> d0eeb2c7a0ce3a1e18dcb86288d03e4b1deb869e
            },
        ),
    ]
