# Generated by Django 2.2.1 on 2019-08-28 15:26

from django.db import migrations, models
import django.db.models.deletion
import erp_core.fileshandler.filemixin


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessApprovalCivil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('access_approval', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/CivilWorksTeam/accessapproval/'))),
                ('access_approval_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccessApprovalInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('access_approval', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/InstallationTeam/accessapproval/'))),
                ('access_approval_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AntennaCoaxInstallDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/Antennacoaxinstallation/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AntennaCoaxInstallSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('antenna_coax_installation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/antennacoaxinstallation/'))),
                ('antenna_coax_installation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/antennacoaxinstallation/'))),
                ('antenna_coax_installation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/antennacoaxinstallation/'))),
                ('antenna_coax_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlindingDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/Blinding/'))),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlindingSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('blinding_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/binding/'))),
                ('blinding_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/binding/'))),
                ('blinding_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/binding/'))),
                ('blinding_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockworkPanelConstDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/BlockworkPanelConst/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockworkPanelConstSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('blockwallpanelconst_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/BlockworkPanelConst/'))),
                ('blockwallpanelconst_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/BlockworkPanelConst/'))),
                ('blockwallpanelconst_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/BlockworkPanelConst/'))),
                ('blockwallpanelconst_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BoundaryWallTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('boundary_wall_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('block_construction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BlockworkPanelConstSubtask')),
                ('engineers_atsite', models.ManyToManyField(blank=True, to='users.Engineer')),
            ],
            options={
                'verbose_name_plural': 'Boundary Wall TASKS',
            },
        ),
        migrations.CreateModel(
            name='BS241AndGeneratorSlabTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('bs241_and_generator_slabs_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'BS241 and Generator Slab TASKS',
            },
        ),
        migrations.CreateModel(
            name='BS241ConcretePourCuringPeriodDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/BS241ConcretePourCuringPeriod/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BTSinstallationTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('BTSinstallation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Telecom/BTSinstallation/'))),
                ('BTSinstallation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Telecom/BTSinstallation/'))),
                ('BTSinstallation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Telecom/BTSinstallation/'))),
                ('BTSinstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BTSinstallationTaskDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/MWInstallationTask/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('sub_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='btsinstallationtaskdates', to='erp_construction.BTSinstallationTask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BtsProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bts_project_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
            ],
            options={
                'verbose_name_plural': 'BTS PROJECTS',
            },
        ),
        migrations.CreateModel(
            name='BtsSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('site_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('site_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('BTS_type', models.CharField(blank=True, max_length=100, null=True)),
                ('site_owner', models.CharField(blank=True, max_length=100, null=True)),
                ('geotech_file', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/Project/geotech/'))),
                ('access_letter', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/Project/accessletters/'))),
                ('approved_drawing', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/Project/approveddrawings/'))),
                ('final_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/SafaricomTeam/finalcert/'))),
                ('final_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
            ],
            options={
                'verbose_name_plural': 'BTS SITES',
            },
        ),
        migrations.CreateModel(
            name='CableWaysDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/Cableways/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CableWaysSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('cable_ways_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/cableways/'))),
                ('cable_ways_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/cableways/'))),
                ('cable_ways_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/cableways/'))),
                ('cable_ways_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcreteCuringPeriodDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/ConcretePourCuringPeriod/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcreteCuringPeriodSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('concrete_pour_curing_period_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/ConcretePourCuringPeriod/'))),
                ('concrete_pour_curing_period_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/ConcretePourCuringPeriod/'))),
                ('concrete_pour_curing_period_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/ConcretePourCuringPeriod/'))),
                ('concrete_pour_curing_period_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcretePourDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/ConcretePour/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcretePourSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('concrete_pour_curing_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/concretepour/'))),
                ('concrete_pour_curing_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/concretepour/'))),
                ('concrete_pour_curing_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/concretepour/'))),
                ('concrete_pour_curing_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectricalEarthing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('earthing_connections_and_testing_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('earthing_connections_and_testing_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('earthing_connections_and_testing_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('earthing_connections_and_testing_images_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectricalEarthingDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/GeneratorElectricalsInstalls/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('sub_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='electricalearthingdates', to='erp_construction.ElectricalEarthing')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectricalTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('earthing_connections_and_testing', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.ElectricalEarthing')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExcavationDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/Excavation/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoundFootPourDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/FoundFootPour/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GateInstallationDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/GateInstallation/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HealthDocumentsInstallationTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('job_hazard_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/HealthDocumentsInstallationTeam/jobhazard/'))),
                ('job_hazard_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('incident_notification_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/HealthDocumentsInstallationTeam/incident/'))),
                ('incident_notification_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('toolbox_meeting_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/HealthDocumentsInstallationTeam/toolbox/'))),
                ('toolbox_meeting_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('communication_plan_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/HealthDocumentsInstallationTeam/communication/'))),
                ('communication_plan_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('health_documents_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('safety_picture', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'images/HealthDocumentsInstallationTeam/'))),
                ('is_approved', models.BooleanField(default=False)),
                ('access_approval', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_construction.AccessApprovalInstallation')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KPLCSolarDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/KPLCSolar/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MWInstallationTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('mWinstallation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Telecom/MWinstallation/'))),
                ('mWinstallation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Telecom/MWinstallation/'))),
                ('mWinstallation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Telecom/MWinstallation/'))),
                ('mWinstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MWInstallationTaskDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/MWInstallationTask/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('sub_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mwinstallationtaskdates', to='erp_construction.MWInstallationTask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectIcon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ImageField(upload_to='images/Project/Icons/%Y/%m/%d/')),
                ('site_owner', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RazorElectricFenceDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/RazorElectricFence/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReticulationAPSinstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('electricalreticulation_APSInstallation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/ReticulationAPSinstallation/'))),
                ('electricalreticulation_APSInstallation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/ReticulationAPSinstallation/'))),
                ('electricalreticulation_APSInstallation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/ReticulationAPSinstallation/'))),
                ('electricalreticulation_APSInstallation_images_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReticulationAPSinstallationDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/ReticulationAPSinstallation/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('sub_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reticulationAPSinstallationdates', to='erp_construction.ReticulationAPSinstallation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteClearingDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('casuals_list', models.FileField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/SiteSiteClearing/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SteelFixFormworkDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/SteelFixFormwork/'))),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerBaseDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/TowerBase/'))),
                ('tower_base_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerErectionDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/Towererection/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerPaintDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/Towerpainting/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UndergroundTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('underground_ducting_and_manholes_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/UndergroundTask/'))),
                ('underground_ducting_and_manholes_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/UndergroundTask/'))),
                ('underground_ducting_and_manholes_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/UndergroundTask/'))),
                ('underground_ducting_and_manholes_images_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UndergroundTaskDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/UnderGroundTasks/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('sub_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='undergroundtaskdates', to='erp_construction.UndergroundTask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WarrantyCertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('civilworks_installation_certificate', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/WarrantyCertificates/civilworks/'))),
                ('connectors_torque_certificate', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/WarrantyCertificates/connectorsTorque/'))),
                ('safe_to_climb_certificate', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/WarrantyCertificates/SafeToClimb/'))),
                ('is_approved', models.BooleanField(default=False)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UndergroundTaskImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('underground_ducting_and_manholes_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/antennacoaxinstallation/'))),
                ('underground_ducting_and_manholes_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='undergroundtaskimages', to='erp_construction.UndergroundTaskDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerPaintSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('tower_painting_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towerpainting/'))),
                ('tower_painting_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towerpainting/'))),
                ('tower_painting_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towerpainting/'))),
                ('tower_painting_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerPaintImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tower_painting_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/towerpainting/'))),
                ('tower_painting_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='towerpaintimages', to='erp_construction.TowerPaintDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='towerpaintdate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='towerpaintdates', to='erp_construction.TowerPaintSubtask'),
        ),
        migrations.CreateModel(
            name='TowerErectionSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('tower_erection_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towererection/'))),
                ('tower_erection_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towererection/'))),
                ('tower_erection_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towererection/'))),
                ('tower_erection_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerErectionImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tower_erection_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/towererection/'))),
                ('tower_erection_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='towererectionimages', to='erp_construction.TowerErectionDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='towererectiondate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='towererectiondates', to='erp_construction.TowerErectionSubtask'),
        ),
        migrations.CreateModel(
            name='TowerBaseSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('towerbase_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towerbase/'))),
                ('towerbase_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towerbase/'))),
                ('towerbase_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towerbase/'))),
                ('tower_base_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerBaseImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('towerbase_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/towerbase/'))),
                ('tower_base_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='towerbaseimages', to='erp_construction.TowerBaseDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='towerbasedate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='towerbasedates', to='erp_construction.TowerBaseSubtask'),
        ),
        migrations.CreateModel(
            name='TowerAntennaCoaxTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('tower_antenna_coax_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('antenna_coax_installation', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.AntennaCoaxInstallSubtask')),
                ('cable_ways', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.CableWaysSubtask')),
                ('engineers_atsite', models.ManyToManyField(blank=True, to='users.Engineer')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
                ('tower_erection', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.TowerErectionSubtask')),
                ('tower_painting', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.TowerPaintSubtask')),
            ],
            options={
                'verbose_name_plural': 'Tower Antenna Coax TASKS',
            },
        ),
        migrations.CreateModel(
            name='TestCetificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('cube_test_7days', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/TestCertificates/cubetest7/'))),
                ('cube_test_28days', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/TestCertificates/cubetest28/%Y/'))),
                ('earth_test', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/TestCertificates/earthtest/'))),
                ('is_approved', models.BooleanField(default=False)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TelecomTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('link_commissioning', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
                ('Installation_of_BTS', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BTSinstallationTask')),
                ('Installation_of_MW_links', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.MWInstallationTask')),
                ('engineers_atsite', models.ManyToManyField(blank=True, to='users.Engineer')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SteelFixFormworkSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('steel_fix_formwork_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/steelfix/'))),
                ('steel_fix_formwork_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/steelfix/'))),
                ('steel_fix_formwork_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/steelfix/'))),
                ('steel_fix_formwork_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SteelFixFormworkImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('steel_fixformwork_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/SteelFix/'))),
                ('steel_fixformwork_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='steelfixformworkimages', to='erp_construction.SteelFixFormworkDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='steelfixformworkdate',
            name='sub_task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='steelfixformworkdates', to='erp_construction.SteelFixFormworkSubtask'),
        ),
        migrations.CreateModel(
            name='SiteClearingSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('setting_site_clearing_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/siteclearing/'))),
                ('setting_site_clearing_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/siteclearing/'))),
                ('setting_site_clearing_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/siteclearing/'))),
                ('setting_site_clearing_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteClearingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('setting_site_clearing_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/siteclearing/'))),
                ('setting_site_clearing_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='siteclearingimages', to='erp_construction.SiteClearingDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='siteclearingdate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='siteclearingdates', to='erp_construction.SiteClearingSubtask'),
        ),
        migrations.CreateModel(
            name='ReticulationAPSinstallationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('electricalreticulation_APSInstallation_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/InstallationTeam/Electrical/ReticulationAPSinstallation/'))),
                ('electricalreticulation_APSInstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reticulationAPSinstallationimages', to='erp_construction.ReticulationAPSinstallationDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RazorElectricFenceSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('razorelectricfance_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/RazorElectricFence/'))),
                ('razorelectricfance_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/RazorElectricFence/'))),
                ('razorelectricfance_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/RazorElectricFence/'))),
                ('razorelectricfance_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RazorElectricFenceImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('razorelectricfance_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/RazorElectricFence/'))),
                ('razorelectricfance_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='razorelectricfenceimages', to='erp_construction.RazorElectricFenceDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='razorelectricfencedate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='razorelectricfencedates', to='erp_construction.RazorElectricFenceSubtask'),
        ),
        migrations.CreateModel(
            name='ProjectPurchaseOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('po_file', models.FileField(blank=True, null=True, upload_to='files/CommercialTeam/pofile/%Y/%m/%d/')),
                ('material_cost', models.IntegerField()),
                ('labour_cost', models.IntegerField()),
                ('total_cost_of_po', models.IntegerField()),
                ('is_approved', models.BooleanField(default=False)),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectCosting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project_costing_file', models.FileField(blank=True, null=True, upload_to='files/CommercialTeam/projectcosting/%Y/%m/%d/')),
                ('material_cost', models.IntegerField()),
                ('labour_cost', models.IntegerField()),
                ('total_projected_cost', models.IntegerField()),
                ('is_approved', models.BooleanField(default=False)),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProcurementTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('po_steel', models.FileField(blank=True, null=True, upload_to='files/ProcurementTeam/posteel/%Y/%m/%d/')),
                ('po_electrical_materials', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/ProcurementTeam/poelectrical/'))),
                ('po_subcontractors', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/ProcurementTeam/posubcontractor/'))),
                ('po_subcontractors_amount', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MWInstallationTaskImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('mWinstallation_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/installationTeam/Telecom/MWinstallation/'))),
                ('mWinstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mwinstallationtaskimages', to='erp_construction.MWInstallationTaskDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KPLCSolarSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('kplc_solar_installation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/KPLCSolar/'))),
                ('kplc_solar_installation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/KPLCSolar/'))),
                ('kplc_solar_installation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/KPLCSolar/'))),
                ('kplc_solar_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KPLCSolarImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('kplc_solar_installation_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/KPLCSolar/'))),
                ('kplc_solar_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='kplcsolarimages', to='erp_construction.KPLCSolarDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='kplcsolardate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kplcsolardates', to='erp_construction.KPLCSolarSubtask'),
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('issue', models.CharField(max_length=100)),
                ('issue_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'images/InstallationTeam/issue/'))),
                ('issue_sorted_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'images/InstallationTeam/issue/%Y/%m/%d/'))),
                ('closed', models.BooleanField(default=False)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='issues', to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstallationTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('as_built', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/SafaricomTeam/as_built/'))),
                ('signoff', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/SafaricomTeam/signoff/'))),
                ('signoff_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('rfi_document', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/SafaricomTeam/rf/'))),
                ('rfi_document_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('integration_parameter', models.BooleanField(default=False)),
                ('integration_parameter_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('snag_document', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/SafaricomTeam/snag/'))),
                ('snag_document_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('conditional_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/SafaricomTeam/conditionalcert/'))),
                ('conditional_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('electrical_tasks_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.ElectricalTask')),
                ('health_documents', models.ManyToManyField(blank=True, to='erp_construction.HealthDocumentsInstallationTeam')),
                ('issue', models.ManyToManyField(blank=True, to='erp_construction.Issue')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
                ('telecom_tasks_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.TelecomTask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HealthDocumentsCivilTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('job_hazard_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/HealthDocumentsCivilTeam/jobhazard/'))),
                ('job_hazard_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('incident_notification_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/HealthDocumentsCivilTeam/incident/'))),
                ('incident_notification_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('toolbox_meeting_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/HealthDocumentsCivilTeam/toolbox/'))),
                ('toolbox_meeting_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('communication_plan_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/HealthDocumentsCivilTeam/communication/'))),
                ('communication_plan_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('health_documents_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('safety_picture', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'images/HealthDocumentsCivilTeam/'))),
                ('is_approved', models.BooleanField(default=False)),
                ('access_approval', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.AccessApprovalCivil')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='healthdocumentscivilteam', to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneratorInstallationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('generator_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/generatorinstallation/'))),
                ('generator_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='generatorinstallationimages', to='erp_construction.AntennaCoaxInstallDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneratorInstallationDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/GeneratorInstall/'))),
                ('casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('sub_task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generatorinstallationdates', to='erp_construction.AntennaCoaxInstallSubtask')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneratorInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('Generator_and_Fuel_Tank_Installation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('Generator_and_Fuel_Tank_Installation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('Generator_and_Fuel_Tank_Installation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('before_fuel_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Fueling/'))),
                ('before_fuel_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Fueling/'))),
                ('after_fuel_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Fueling/'))),
                ('after_fuel_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Fueling/'))),
                ('Generator_and_Fuel_Tank_Installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GateInstallationSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('gateinstallation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/GateInstallation/'))),
                ('gateinstallation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/GateInstallation/'))),
                ('gateinstallation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/GateInstallation/'))),
                ('gateinstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GateInstallationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('gateinstallation_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/GateInstallation/'))),
                ('gateinstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gateinstallationimages', to='erp_construction.GateInstallationDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='gateinstallationdate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gateinstallationdates', to='erp_construction.GateInstallationSubtask'),
        ),
        migrations.CreateModel(
            name='FoundFootPourSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('foundfootpour_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/FoundFootPour/'))),
                ('foundfootpour_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/FoundFootPour/'))),
                ('foundfootpour_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/FoundFootPour/'))),
                ('foundfootpour_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoundFootPourImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('foundfootpour_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/FoundFootPour/'))),
                ('foundfootpour_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='foundfootpourimages', to='erp_construction.FoundFootPourDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='foundfootpourdate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='foundfootpourdates', to='erp_construction.FoundFootPourSubtask'),
        ),
        migrations.CreateModel(
            name='FoundationCreationTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('foundation_and_curing_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('blinding', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BlindingSubtask')),
                ('concrete_curing_period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.ConcreteCuringPeriodSubtask')),
                ('concrete_pour_curing_period', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.ConcretePourSubtask')),
                ('engineers_atsite', models.ManyToManyField(blank=True, to='users.Engineer')),
                ('excavation_tower_base', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.TowerBaseSubtask')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
                ('setting_site_clearing', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.SiteClearingSubtask')),
                ('steel_fix_formwork', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.SteelFixFormworkSubtask')),
            ],
            options={
                'verbose_name_plural': 'Fountain Creation TASKS',
            },
        ),
        migrations.CreateModel(
            name='ExcavationSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('excavation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/Excavation/'))),
                ('excavation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/Excavation/'))),
                ('excavation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/Excavation/'))),
                ('excavation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExcavationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('excavation_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/Excavation/'))),
                ('excavation_image_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='excavationimages', to='erp_construction.ExcavationDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='excavationdate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='excavationdates', to='erp_construction.ExcavationSubtask'),
        ),
        migrations.AddField(
            model_name='electricaltask',
            name='electricalreticulation_APSInstallation',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.ReticulationAPSinstallation'),
        ),
        migrations.AddField(
            model_name='electricaltask',
            name='engineers_atsite',
            field=models.ManyToManyField(blank=True, to='users.Engineer'),
        ),
        migrations.AddField(
            model_name='electricaltask',
            name='generator_and_Fuel_Tank_Installation',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.GeneratorInstallation'),
        ),
        migrations.AddField(
            model_name='electricaltask',
            name='kPLC_solar_installation',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.KPLCSolarImage'),
        ),
        migrations.AddField(
            model_name='electricaltask',
            name='project_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite'),
        ),
        migrations.AddField(
            model_name='electricaltask',
            name='underground_ducting_and_manholes',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.UndergroundTask'),
        ),
        migrations.CreateModel(
            name='ElectricalEarthingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('earthing_connections_and_testing_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('earthing_connections_and_testing_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='electricalearthingimages', to='erp_construction.ElectricalEarthingDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcretePourImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('concrete_pour_curing_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/concretepour/'))),
                ('concrete_pour_curing_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concretepourdates', to='erp_construction.ConcretePourDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='concretepourdate',
            name='sub_task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concretepourdates', to='erp_construction.ConcretePourSubtask'),
        ),
        migrations.CreateModel(
            name='ConcreteCuringPeriodImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('concrete_curing_period_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/ConcretePourCuringPeriod/'))),
                ('concrete_curing_period_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concretecuringperiodimages', to='erp_construction.ConcreteCuringPeriodDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='concretecuringperioddate',
            name='sub_task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='concretecuringperioddates', to='erp_construction.ConcreteCuringPeriodSubtask'),
        ),
        migrations.CreateModel(
            name='CommercialTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('approved_quote_file', models.FileField(blank=True, null=True, upload_to='files/CommercialTeam/approvedquote/%Y/%m/%d/')),
                ('approved_quote_amount', models.IntegerField(blank=True, null=True)),
                ('initial_invoice', models.FileField(blank=True, null=True, upload_to='files/CommercialTeam/initialinvoice/%Y/%m/%d/')),
                ('initial_invoice_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('po_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_construction.ProjectPurchaseOrder')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
                ('project_costing_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_construction.ProjectCosting')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CivilWorksTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('bs241_and_generator_slabs_images', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BS241AndGeneratorSlabTask')),
                ('foundation_and_curing_images', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.FoundationCreationTask')),
                ('health_documents', models.ManyToManyField(blank=True, to='erp_construction.HealthDocumentsCivilTeam')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='users.CustomUser')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
                ('site_walling_images_field', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BoundaryWallTask')),
                ('tower_data', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.TowerAntennaCoaxTask')),
            ],
            options={
                'verbose_name_plural': 'CIVIL WORKS TEAM',
            },
        ),
        migrations.CreateModel(
            name='CableWaysImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('cable_ways_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/cableways/'))),
                ('cable_ways_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cablewaysimages', to='erp_construction.CableWaysDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='cablewaysdate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cablewaysdates', to='erp_construction.CableWaysSubtask'),
        ),
        migrations.AddField(
            model_name='btssite',
            name='icon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.ProjectIcon'),
        ),
        migrations.AddField(
            model_name='btssite',
            name='location',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='users.Location'),
        ),
        migrations.AddField(
            model_name='btssite',
            name='project_name',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_construction.BtsProject'),
        ),
        migrations.AddField(
            model_name='btsproject',
            name='icon',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.ProjectIcon'),
        ),
        migrations.CreateModel(
            name='BTSinstallationTaskImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('mWinstallation_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/installationTeam/Telecom/MWinstallation/'))),
                ('mWinstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='btsinstallationtaskimages', to='erp_construction.BTSinstallationTaskDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='btsinstallationtask',
            name='project_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite'),
        ),
        migrations.CreateModel(
            name='BtsBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beneficiary_name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=350, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('unit', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_approved', models.BooleanField(blank=True, default=False, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
        ),
        migrations.CreateModel(
            name='BS241ConcretePourCuringPeriodSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('bs241_concrete_pour_curing_period_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/BS241ConcretePourCuringPeriod/'))),
                ('bs241_concrete_pour_curing_period_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/BS241ConcretePourCuringPeriod/'))),
                ('bs241_concrete_pour_curing_period_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/BS241ConcretePourCuringPeriod/'))),
                ('bs241_concrete_pour_curing_period_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('no_of_casuals_atsite', models.ManyToManyField(blank=True, to='users.Casual')),
                ('project_name', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BS241ConcretePourCuringPeriodImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('bs241_concrete_pour_curing_period_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/BS241ConcretePourCuringPeriod/'))),
                ('bs241_concrete_pour_curing_period_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bs241Concretepourcuringperiodimages', to='erp_construction.BS241ConcretePourCuringPeriodDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='bs241concretepourcuringperioddate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bs241Concretepourcuringperioddates', to='erp_construction.BS241ConcretePourCuringPeriodSubtask'),
        ),
        migrations.AddField(
            model_name='bs241andgeneratorslabtask',
            name='bs241_concrete_pour_pouring_period',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BS241ConcretePourCuringPeriodSubtask'),
        ),
        migrations.AddField(
            model_name='bs241andgeneratorslabtask',
            name='engineers_atsite',
            field=models.ManyToManyField(blank=True, to='users.Engineer'),
        ),
        migrations.AddField(
            model_name='bs241andgeneratorslabtask',
            name='foundation_foot_pouring',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.ExcavationSubtask'),
        ),
        migrations.AddField(
            model_name='bs241andgeneratorslabtask',
            name='project_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite'),
        ),
        migrations.AddField(
            model_name='boundarywalltask',
            name='foundation_foot_pouring',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.FoundFootPourSubtask'),
        ),
        migrations.AddField(
            model_name='boundarywalltask',
            name='gate_installation',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.GateInstallationSubtask'),
        ),
        migrations.AddField(
            model_name='boundarywalltask',
            name='project_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite'),
        ),
        migrations.AddField(
            model_name='boundarywalltask',
            name='razor_electric_fence',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.RazorElectricFenceSubtask'),
        ),
        migrations.AddField(
            model_name='blockworkpanelconstsubtask',
            name='project_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite'),
        ),
        migrations.CreateModel(
            name='BlockworkPanelConstImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('blockwallpanelconst_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/BlockworkPanelConst//'))),
                ('blockwallpanelconst_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='erp_construction.BlockworkPanelConstDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='blockworkpanelconstdate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='erp_construction.BlockworkPanelConstSubtask'),
        ),
        migrations.AddField(
            model_name='blindingsubtask',
            name='project_name',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite'),
        ),
        migrations.CreateModel(
            name='BlindingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('blinding_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/Blinding/'))),
                ('blinding_image_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blindingimages', to='erp_construction.BlindingDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='blindingdate',
            name='sub_task',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blindingdates', to='erp_construction.BlindingSubtask'),
        ),
        migrations.AddField(
            model_name='antennacoaxinstallsubtask',
            name='project_name',
            field=models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite'),
        ),
        migrations.CreateModel(
            name='AntennaCoaxInstallImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('antenna_coax_installation_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/antennacoaxinstallation/'))),
                ('antenna_coax_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('day_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='antennacoaxinstallimages', to='erp_construction.AntennaCoaxInstallDate')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='antennacoaxinstalldate',
            name='sub_task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='antennacoaxinstalldates', to='erp_construction.AntennaCoaxInstallSubtask'),
        ),
        migrations.AddField(
            model_name='accessapprovalinstallation',
            name='project_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.BtsSite'),
        ),
        migrations.AddField(
            model_name='accessapprovalcivil',
            name='project_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='accessapprovalcivil', to='erp_construction.BtsSite'),
        ),
    ]
