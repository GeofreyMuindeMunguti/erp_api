# Generated by Django 2.2.1 on 2019-09-20 06:57

from django.db import migrations, models
import erp_core.fileshandler.filemixin


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccessApprovalCivil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('access_approval', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/CivilWorksTeam/accessapproval/'))),
                ('access_approval_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccessApprovalInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('access_approval', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/InstallationTeam/accessapproval/'))),
                ('access_approval_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AntennaCoaxInstallDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/Antennacoaxinstallation/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AntennaCoaxInstallImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('antenna_coax_installation_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/antennacoaxinstallation/'))),
                ('antenna_coax_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AntennaCoaxInstallSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('antenna_coax_installation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/antennacoaxinstallation/'))),
                ('antenna_coax_installation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/antennacoaxinstallation/'))),
                ('antenna_coax_installation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/antennacoaxinstallation/'))),
                ('antenna_coax_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlindingDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/Blinding/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlindingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('blinding_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/Blinding/'))),
                ('blinding_image_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlindingSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('blinding_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/binding/'))),
                ('blinding_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/binding/'))),
                ('blinding_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/binding/'))),
                ('blinding_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockworkPanelConstDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/BlockworkPanelConst/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockworkPanelConstImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('blockwallpanelconst_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/BlockworkPanelConst//'))),
                ('blockwallpanelconst_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BlockworkPanelConstSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('blockwallpanelconst_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/BlockworkPanelConst/'))),
                ('blockwallpanelconst_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/BlockworkPanelConst/'))),
                ('blockwallpanelconst_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/BlockworkPanelConst/'))),
                ('blockwallpanelconst_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BoundaryWallTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('boundary_wall_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Boundary Wall TASKS',
            },
        ),
        migrations.CreateModel(
            name='BS241AndGeneratorSlabTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('bs241_and_generator_slabs_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'BS241 and Generator Slab TASKS',
            },
        ),
        migrations.CreateModel(
            name='BS241ConcretePourCuringPeriodDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/BS241ConcretePourCuringPeriod/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BS241ConcretePourCuringPeriodImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('bs241_concrete_pour_curing_period_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/BS241ConcretePourCuringPeriod/'))),
                ('bs241_concrete_pour_curing_period_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BS241ConcretePourCuringPeriodSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('bs241_concrete_pour_curing_period_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/BS241ConcretePourCuringPeriod/'))),
                ('bs241_concrete_pour_curing_period_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/BS241ConcretePourCuringPeriod/'))),
                ('bs241_concrete_pour_curing_period_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/BS241ConcretePourCuringPeriod/'))),
                ('bs241_concrete_pour_curing_period_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BtsBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('beneficiary_name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.CharField(blank=True, max_length=350, null=True)),
                ('date', models.DateTimeField(auto_now_add=True, null=True)),
                ('phoneNumber', models.CharField(blank=True, max_length=100, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('rate', models.IntegerField(blank=True, null=True)),
                ('unit', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_approved', models.BooleanField(blank=True, default=False, null=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='BTSinstallationTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('BTSinstallation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Telecom/BTSinstallation/'))),
                ('BTSinstallation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Telecom/BTSinstallation/'))),
                ('BTSinstallation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Telecom/BTSinstallation/'))),
                ('BTSinstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BTSinstallationTaskDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/MWInstallationTask/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BTSinstallationTaskImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('mWinstallation_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/installationTeam/Telecom/MWinstallation/'))),
                ('mWinstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BtsProject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bts_project_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'BTS PROJECTS',
            },
        ),
        migrations.CreateModel(
            name='BtsSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('site_name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('site_number', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('BTS_type', models.CharField(blank=True, max_length=100, null=True)),
                ('site_owner', models.CharField(blank=True, max_length=100, null=True)),
                ('geotech_file', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/Project/geotech/'))),
                ('access_letter', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/Project/accessletters/'))),
                ('approved_drawing', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/Project/approveddrawings/'))),
                ('final_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/SafaricomTeam/finalcert/'))),
                ('final_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'BTS SITES',
            },
        ),
        migrations.CreateModel(
            name='CableWaysDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/Cableways/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CableWaysImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('cable_ways_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/cableways/'))),
                ('cable_ways_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CableWaysSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('cable_ways_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/cableways/'))),
                ('cable_ways_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/cableways/'))),
                ('cable_ways_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/cableways/'))),
                ('cable_ways_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CivilWorksTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name_plural': 'CIVIL WORKS TEAM',
            },
        ),
        migrations.CreateModel(
            name='CommercialTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('approved_quote_file', models.FileField(blank=True, null=True, upload_to='files/CommercialTeam/approvedquote/%Y/%m/%d/')),
                ('approved_quote_amount', models.IntegerField(blank=True, null=True)),
                ('initial_invoice', models.FileField(blank=True, null=True, upload_to='files/CommercialTeam/initialinvoice/%Y/%m/%d/')),
                ('initial_invoice_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcreteCuringPeriodDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/ConcretePourCuringPeriod/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcreteCuringPeriodImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('concrete_curing_period_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/ConcretePourCuringPeriod/'))),
                ('concrete_curing_period_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcreteCuringPeriodSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('concrete_pour_curing_period_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/ConcretePourCuringPeriod/'))),
                ('concrete_pour_curing_period_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/ConcretePourCuringPeriod/'))),
                ('concrete_pour_curing_period_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/ConcretePourCuringPeriod/'))),
                ('concrete_pour_curing_period_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcretePourDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/ConcretePour/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcretePourImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('concrete_pour_curing_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/concretepour/'))),
                ('concrete_pour_curing_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcretePourSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('concrete_pour_curing_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/concretepour/'))),
                ('concrete_pour_curing_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/concretepour/'))),
                ('concrete_pour_curing_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/concretepour/'))),
                ('concrete_pour_curing_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectricalEarthing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('earthing_connections_and_testing_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('earthing_connections_and_testing_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('earthing_connections_and_testing_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('earthing_connections_and_testing_images_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectricalEarthingDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/GeneratorElectricalsInstalls/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectricalEarthingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('earthing_connections_and_testing_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('earthing_connections_and_testing_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ElectricalTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExcavationDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/Excavation/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExcavationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('excavation_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/Excavation/'))),
                ('excavation_image_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExcavationSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('excavation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/Excavation/'))),
                ('excavation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/Excavation/'))),
                ('excavation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/Excavation/'))),
                ('excavation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoundationTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('foundation_and_curing_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Fountain Task',
            },
        ),
        migrations.CreateModel(
            name='FoundFootPourDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/FoundFootPour/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoundFootPourImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('foundfootpour_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/FoundFootPour/'))),
                ('foundfootpour_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoundFootPourSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('foundfootpour_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/FoundFootPour/'))),
                ('foundfootpour_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/FoundFootPour/'))),
                ('foundfootpour_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/FoundFootPour/'))),
                ('foundfootpour_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GateInstallationDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/GateInstallation/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GateInstallationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('gateinstallation_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/GateInstallation/'))),
                ('gateinstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GateInstallationSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('gateinstallation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/GateInstallation/'))),
                ('gateinstallation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/GateInstallation/'))),
                ('gateinstallation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/GateInstallation/'))),
                ('gateinstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneratorInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('Generator_and_Fuel_Tank_Installation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('Generator_and_Fuel_Tank_Installation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('Generator_and_Fuel_Tank_Installation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Generator_FuelTank_Install/'))),
                ('before_fuel_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Fueling/'))),
                ('before_fuel_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Fueling/'))),
                ('after_fuel_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Fueling/'))),
                ('after_fuel_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/Fueling/'))),
                ('Generator_and_Fuel_Tank_Installation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneratorInstallationDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/GeneratorInstall/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GeneratorInstallationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('generator_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/generatorinstallation/'))),
                ('generator_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HealthDocumentsCivilTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('job_hazard_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/HealthDocumentsCivilTeam/jobhazard/'))),
                ('job_hazard_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('incident_notification_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/HealthDocumentsCivilTeam/incident/'))),
                ('incident_notification_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('toolbox_meeting_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/HealthDocumentsCivilTeam/toolbox/'))),
                ('toolbox_meeting_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('communication_plan_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/HealthDocumentsCivilTeam/communication/'))),
                ('communication_plan_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('health_documents_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('safety_picture', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/HealthDocumentsCivilTeam/'))),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HealthDocumentsInstallationTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('job_hazard_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/HealthDocumentsInstallationTeam/jobhazard/'))),
                ('job_hazard_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('incident_notification_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/HealthDocumentsInstallationTeam/incident/'))),
                ('incident_notification_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('toolbox_meeting_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/HealthDocumentsInstallationTeam/toolbox/'))),
                ('toolbox_meeting_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('communication_plan_form', models.FileField(upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/HealthDocumentsInstallationTeam/communication/'))),
                ('communication_plan_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('health_documents_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('safety_picture', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'images/HealthDocumentsInstallationTeam/'))),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InstallationTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('as_built', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/SafaricomTeam/as_built/'))),
                ('signoff', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/SafaricomTeam/signoff/'))),
                ('signoff_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('rfi_document', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/SafaricomTeam/rf/'))),
                ('rfi_document_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('integration_parameter', models.BooleanField(default=False)),
                ('integration_parameter_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('snag_document', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/SafaricomTeam/snag/'))),
                ('snag_document_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('conditional_acceptance_cert', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/SafaricomTeam/conditionalcert/'))),
                ('conditional_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('issue', models.CharField(max_length=100)),
                ('issue_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/issue/'))),
                ('issue_sorted_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/issue/%Y/%m/%d/'))),
                ('closed', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KPLCSolarDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/KPLCSolar/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KPLCSolarImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('kplc_solar_installation_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/KPLCSolar/'))),
                ('kplc_solar_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='KPLCSolarSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('kplc_solar_installation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/KPLCSolar/'))),
                ('kplc_solar_installation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/KPLCSolar/'))),
                ('kplc_solar_installation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/KPLCSolar/'))),
                ('kplc_solar_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MWInstallationTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('mWinstallation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Telecom/MWinstallation/'))),
                ('mWinstallation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Telecom/MWinstallation/'))),
                ('mWinstallation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Telecom/MWinstallation/'))),
                ('mWinstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MWInstallationTaskDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/MWInstallationTask/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MWInstallationTaskImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('mWinstallation_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/installationTeam/Telecom/MWinstallation/'))),
                ('mWinstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProcurementTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('po_steel', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/ProcurementTeam/posteel/'))),
                ('po_electrical_materials', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/ProcurementTeam/poelectrical/'))),
                ('po_subcontractors', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/ProcurementTeam/posubcontractor/'))),
                ('po_subcontractors_amount', models.IntegerField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectCosting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project_costing_file', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/CommercialTeam/projectcosting/'))),
                ('material_cost', models.IntegerField()),
                ('labour_cost', models.IntegerField()),
                ('total_projected_cost', models.IntegerField()),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ProjectIcon',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('icon', models.ImageField(upload_to='images/Project/Icons/%Y/%m/%d/')),
                ('site_owner', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProjectPurchaseOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('po_file', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/CommercialTeam/pofile/'))),
                ('material_cost', models.IntegerField()),
                ('labour_cost', models.IntegerField()),
                ('total_cost_of_po', models.IntegerField()),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RazorElectricFenceDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/RazorElectricFence/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RazorElectricFenceImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('razorelectricfance_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/RazorElectricFence/'))),
                ('razorelectricfance_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RazorElectricFenceSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('razorelectricfance_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/RazorElectricFence/'))),
                ('razorelectricfance_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/RazorElectricFence/'))),
                ('razorelectricfance_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/RazorElectricFence/'))),
                ('razorelectricfance_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReticulationAPSinstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('electricalreticulation_APSInstallation_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/ReticulationAPSinstallation/'))),
                ('electricalreticulation_APSInstallation_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/ReticulationAPSinstallation/'))),
                ('electricalreticulation_APSInstallation_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/ReticulationAPSinstallation/'))),
                ('electricalreticulation_APSInstallation_images_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReticulationAPSinstallationDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/ReticulationAPSinstallation/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReticulationAPSinstallationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('electricalreticulation_APSInstallation_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/InstallationTeam/Electrical/ReticulationAPSinstallation/'))),
                ('electricalreticulation_APSInstallation_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteClearingDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True, unique=True)),
                ('casuals_list', models.FileField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/SiteSiteClearing/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteClearingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('setting_site_clearing_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/siteclearing/'))),
                ('setting_site_clearing_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteClearingSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('setting_site_clearing_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/siteclearing/'))),
                ('setting_site_clearing_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/siteclearing/'))),
                ('setting_site_clearing_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/siteclearing/'))),
                ('setting_site_clearing_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SteelFixFormworkDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/SteelFixFormwork/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SteelFixFormworkImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('steel_fixformwork_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/SteelFix/'))),
                ('steel_fixformwork_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SteelFixFormworkSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('steel_fix_formwork_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/steelfix/'))),
                ('steel_fix_formwork_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/steelfix/'))),
                ('steel_fix_formwork_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/steelfix/'))),
                ('steel_fix_formwork_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TelecomTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('link_commissioning', models.BooleanField(default=False)),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TestCetificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('cube_test_7days', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/TestCertificates/cubetest7/'))),
                ('cube_test_28days', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDir('BTSProjects', 'files/TestCertificates/cubetest28/%Y/'))),
                ('earth_test', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/TestCertificates/earthtest/'))),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerAntennaCoaxTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('tower_antenna_coax_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'verbose_name_plural': 'Tower Antenna Coax TASKS',
            },
        ),
        migrations.CreateModel(
            name='TowerBaseDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/TowerBase/'))),
                ('tower_base_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerBaseImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('towerbase_image', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/towerbase/'))),
                ('tower_base_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerBaseSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('towerbase_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towerbase/'))),
                ('towerbase_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towerbase/'))),
                ('towerbase_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towerbase/'))),
                ('tower_base_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerErectionDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/Towererection/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerErectionImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tower_erection_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/towererection/'))),
                ('tower_erection_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerErectionSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('tower_erection_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towererection/'))),
                ('tower_erection_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towererection/'))),
                ('tower_erection_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towererection/'))),
                ('tower_erection_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerPaintDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/Towerpainting/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerPaintImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('tower_painting_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/towerpainting/'))),
                ('tower_painting_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TowerPaintSubtask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('tower_painting_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towerpainting/'))),
                ('tower_painting_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towerpainting/'))),
                ('tower_painting_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/CivilWorksTeam/towerpainting/'))),
                ('tower_painting_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UndergroundTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('underground_ducting_and_manholes_image_1', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/UndergroundTask/'))),
                ('underground_ducting_and_manholes_image_2', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/UndergroundTask/'))),
                ('underground_ducting_and_manholes_image_3', models.ImageField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'images/InstallationTeam/Electrical/UndergroundTask/'))),
                ('underground_ducting_and_manholes_images_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UndergroundTaskDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('work_day', models.DateField(blank=True, null=True)),
                ('casuals_list', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirDate('BTSProjects', 'files/Casuals/UnderGroundTasks/'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UndergroundTaskImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('underground_ducting_and_manholes_image', models.ImageField(blank=True, max_length=250, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirImage('BTSProjects', 'images/CivilWorksTeam/antennacoaxinstallation/'))),
                ('underground_ducting_and_manholes_comment', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WarrantyCertificate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('civilworks_installation_certificate', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/WarrantyCertificates/civilworks/'))),
                ('connectors_torque_certificate', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/WarrantyCertificates/connectorsTorque/'))),
                ('safe_to_climb_certificate', models.FileField(blank=True, null=True, upload_to=erp_core.fileshandler.filemixin.UploadToProjectDirSubTask('BTSProjects', 'files/WarrantyCertificates/SafeToClimb/'))),
                ('is_approved', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
