# Generated by Django 2.2.1 on 2019-05-08 08:34

from django.conf import settings
import django.contrib.auth.models
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(blank=True, max_length=150, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AccessApprovalCivil',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_approval', models.FileField(upload_to='files/CivilWorksTeam/accessapproval/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccessApprovalInstallation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_approval', models.FileField(upload_to='files/InstallationTeam/accessapproval/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='BTSAndGeneatorSlabsImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bts_and_generator_slabs_image', models.ImageField(upload_to='images/CivilWorksTeam/slabs/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ElectricalImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('electrical_installation_image', models.ImageField(upload_to='images/InstallationTeam/Electrical/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.CharField(max_length=150)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('team', models.CharField(max_length=150)),
                ('position', models.CharField(max_length=150)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='HealthDocumentsInstallationTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_hazard_form', models.FileField(upload_to='files/HealthDocumentsInstallationTeam/jobhazard/%Y/%m/%d/')),
                ('job_hazard_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('incident_notification_form', models.FileField(upload_to='files/HealthDocumentsInstallationTeam/incident/%Y/%m/%d/')),
                ('incident_notification_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('toolbox_meeting_form', models.FileField(upload_to='files/HealthDocumentsInstallationTeam/toolbox/%Y/%m/%d/')),
                ('toolbox_meeting_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('communication_plan_form', models.FileField(upload_to='files/HealthDocumentsInstallationTeam/communication/%Y/%m/%d/')),
                ('communication_plan_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project_name', models.CharField(max_length=100, unique=True)),
                ('location', models.CharField(max_length=200)),
                ('geotech_file', models.FileField(upload_to='files/Project/geotech/%Y/%m/%d/')),
                ('access_letter', models.FileField(upload_to='files/Project/accessletters/%Y/%m/%d/')),
                ('approved_drawing', models.FileField(upload_to='files/Project/approveddrawings/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SiteWallingImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_walling_image', models.ImageField(upload_to='images/CivilWorksTeam/sitewalling/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project')),
            ],
        ),
        migrations.CreateModel(
            name='SafaricomTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signoff_and_rf_document', models.FileField(upload_to='files/SafaricomTeam/rfsignoff/%Y/%m/%d/')),
                ('signoff_and_rf_document_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('integration_parameter', models.FileField(upload_to='files/SafaricomTeam/integrationparameters/%Y/%m/%d/')),
                ('integration_parameter_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('snag_document', models.FileField(upload_to='files/SafaricomTeam/snag/%Y/%m/%d/')),
                ('snag_document_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('conditional_acceptance_cert', models.FileField(upload_to='files/SafaricomTeam/conditionalcert/%Y/%m/%d/')),
                ('conditional_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('final_acceptance_cert', models.FileField(upload_to='files/SafaricomTeam/finalcert/%Y/%m/%d/')),
                ('final_acceptance_cert_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project')),
            ],
        ),
        migrations.CreateModel(
            name='RFAndLinkImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rf_and_link_installation_image', models.ImageField(upload_to='images/InstallationTeam/RFAndLink/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project')),
            ],
        ),
        migrations.CreateModel(
            name='ProcurementTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_steel', models.FileField(upload_to='files/ProcurementTeam/posteel/%Y/%m/%d/')),
                ('po_steel_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('po_electrical_materials', models.FileField(upload_to='files/ProcurementTeam/poelectrical/%Y/%m/%d/')),
                ('po_electrical_materials_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('po_subcontractors', models.FileField(upload_to='files/ProcurementTeam/posubcontractor/%Y/%m/%d/')),
                ('po_subcontractors_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project')),
            ],
        ),
        migrations.CreateModel(
            name='KPLCSolarImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kplc_solar_installation_image', models.ImageField(upload_to='images/InstallationTeam/KPLCSolar/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project')),
            ],
        ),
        migrations.CreateModel(
            name='InstallationTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('health_documents_comment', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), size=None)),
                ('access_approval_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('rf_and_link_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('electrical_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('kplc_solar_installation_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('access_approvals_field', models.ManyToManyField(to='erp_construction.AccessApprovalInstallation')),
                ('electrical_installation_images', models.ManyToManyField(to='erp_construction.ElectricalImage')),
                ('health_documents', models.ManyToManyField(to='erp_construction.HealthDocumentsInstallationTeam')),
                ('kplc_solar_installation_images', models.ManyToManyField(to='erp_construction.KPLCSolarImage')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project')),
                ('rf_and_link_installation_images', models.ManyToManyField(to='erp_construction.RFAndLinkImage')),
            ],
        ),
        migrations.AddField(
            model_name='healthdocumentsinstallationteam',
            name='project_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project'),
        ),
        migrations.CreateModel(
            name='HealthDocumentsCivilTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_hazard_form', models.FileField(upload_to='files/HealthDocumentsCivilTeam/jobhazard/%Y/%m/%d/')),
                ('job_hazard_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('incident_notification_form', models.FileField(upload_to='files/HealthDocumentsCivilTeam/incident/%Y/%m/%d/')),
                ('incident_notification_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('toolbox_meeting_form', models.FileField(upload_to='files/HealthDocumentsCivilTeam/toolbox/%Y/%m/%d/')),
                ('toolbox_meeting_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('communication_plan_form', models.FileField(upload_to='files/HealthDocumentsCivilTeam/communication/%Y/%m/%d/')),
                ('communication_plan_form_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project')),
            ],
        ),
        migrations.CreateModel(
            name='FoundationImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foundation_and_curing_image', models.ImageField(upload_to='images/CivilWorksTeam/foundation/%Y/%m/%d/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project')),
            ],
        ),
        migrations.AddField(
            model_name='electricalimage',
            name='project_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project'),
        ),
        migrations.CreateModel(
            name='CommercialTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('po_file', models.FileField(upload_to='files/CommercialTeam/pofile/%Y/%m/%d/')),
                ('po_file_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('initial_invoice', models.FileField(upload_to='files/CommercialTeam/initialinvoice/%Y/%m/%d/')),
                ('initial_invoice_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project')),
            ],
        ),
        migrations.CreateModel(
            name='CivilWorksTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('health_documents_comment', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=100, null=True), size=None)),
                ('access_approval_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('foundation_and_curing_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('bts_and_generator_slabs_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('site_walling_images_comment', models.CharField(blank=True, max_length=100, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('access_approvals_field', models.ManyToManyField(to='erp_construction.AccessApprovalCivil')),
                ('bts_and_generator_slabs_images', models.ManyToManyField(to='erp_construction.BTSAndGeneatorSlabsImage')),
                ('foundation_and_curing_images', models.ManyToManyField(to='erp_construction.FoundationImage')),
                ('health_documents', models.ManyToManyField(to='erp_construction.HealthDocumentsCivilTeam')),
                ('posted_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('project_name', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project')),
                ('site_walling_images_field', models.ManyToManyField(to='erp_construction.SiteWallingImage')),
            ],
        ),
        migrations.AddField(
            model_name='btsandgeneatorslabsimage',
            name='project_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project'),
        ),
        migrations.AddField(
            model_name='accessapprovalinstallation',
            name='project_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project'),
        ),
        migrations.AddField(
            model_name='accessapprovalcivil',
            name='project_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='erp_construction.Project'),
        ),
    ]
